# Script de test des endpoints MetricsController
$baseUrl = "http://localhost:8081/api/metrics"

Write-Host "üöÄ Test des endpoints du MetricsController" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

# Test 1: V√©rifier les types de cartes disponibles
Write-Host "`nüìã 1. Types de cartes disponibles:" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/types" -Method GET
    $response | ConvertTo-Json
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 2: V√©rifier les types d'op√©rations disponibles  
Write-Host "`nüìã 2. Types d'op√©rations disponibles:" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/operations" -Method GET
    $response | ConvertTo-Json
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 3: Collecter des m√©triques pour VISA
Write-Host "`nüìä 3. Collecte de m√©triques pour VISA:" -ForegroundColor Yellow
try {
    $collectParams = @{
        typeCarte = "VISA"
        operationType = "PAYMENT" 
        executionTime = 1500
    }
    $response = Invoke-RestMethod -Uri "$baseUrl/collect" -Method POST -Body $collectParams
    Write-Host "‚úÖ $response" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 4: R√©cup√©rer les m√©triques pour VISA
Write-Host "`nüìà 4. R√©cup√©ration des m√©triques pour VISA:" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/VISA" -Method GET
    $response | ConvertTo-Json -Depth 3
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 5: Health check
Write-Host "`n‚ù§Ô∏è 5. V√©rification de sant√© du service:" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/health" -Method GET
    $response | ConvertTo-Json
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 6: Collection en lot
Write-Host "`nüì¶ 6. Collection de m√©triques en lot:" -ForegroundColor Yellow
try {
    $batchData = @{
        metrics = @(
            @{
                typeCarte = "MASTERCARD"
                operationType = "REFUND"
                executionTime = 800
            },
            @{
                typeCarte = "AMEX"
                operationType = "AUTHORIZATION"
                executionTime = 1200
            }
        )
    }
    $jsonBody = $batchData | ConvertTo-Json -Depth 3
    $response = Invoke-RestMethod -Uri "$baseUrl/collect/batch" -Method POST -Body $jsonBody -ContentType "application/json"
    $response | ConvertTo-Json -Depth 3
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüèÅ Tests termin√©s!" -ForegroundColor Green
Write-Host "üìö Documentation Swagger disponible sur: http://localhost:8081/swagger-ui.html" -ForegroundColor Cyan